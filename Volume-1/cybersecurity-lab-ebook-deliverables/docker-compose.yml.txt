version: '3.8'

# Cybersecurity Lab - Docker Compose Configuration
# Architecture: Kali Linux + Metasploitable + Ubuntu Server + pfSense

services:
  # ============================================
  # Kali Linux - Machine d'attaque principale
  # ============================================
  kali:
    image: kalilinux/kali-rolling:latest
    container_name: kali-attacker
    hostname: kali
    networks:
      lab_network:
        ipv4_address: 192.168.100.10
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - kali_data:/root
      - ./scripts:/opt/scripts:ro
      - ./pcaps:/opt/pcaps
    command: |
      bash -c '
        apt-get update && \
        apt-get install -y nmap metasploit-framework burpsuite hydra wireshark sqlmap nikto john netcat-openbsd && \
        echo "Kali Linux ready for pentesting!" && \
        tail -f /dev/null
      '
    restart: unless-stopped
    stdin_open: true
    tty: true

  # ============================================
  # Metasploitable - Machine vulnérable cible
  # ============================================
  metasploitable:
    image: tleemcjr/metasploitable2:latest
    container_name: metasploitable-target
    hostname: metasploitable
    networks:
      lab_network:
        ipv4_address: 192.168.100.20
    ports:
      - "21:21"     # FTP
      - "22:22"     # SSH
      - "23:23"     # Telnet
      - "80:80"     # HTTP
      - "139:139"   # NetBIOS
      - "445:445"   # SMB
      - "3306:3306" # MySQL
      - "5432:5432" # PostgreSQL
      - "8180:8180" # Tomcat
    restart: unless-stopped

  # ============================================
  # Ubuntu Server - Serveur cible secondaire
  # ============================================
  ubuntu-server:
    image: ubuntu:22.04
    container_name: ubuntu-target
    hostname: ubuntu-server
    networks:
      lab_network:
        ipv4_address: 192.168.100.30
    volumes:
      - ubuntu_data:/var/www/html
    command: |
      bash -c '
        apt-get update && \
        apt-get install -y apache2 mysql-server php php-mysql openssh-server vsftpd && \
        service apache2 start && \
        service mysql start && \
        service ssh start && \
        useradd -m -s /bin/bash testuser && echo "testuser:password123" | chpasswd && \
        echo "Ubuntu Server ready!" && \
        tail -f /dev/null
      '
    restart: unless-stopped
    stdin_open: true
    tty: true

  # ============================================
  # DVWA - Damn Vulnerable Web Application
  # ============================================
  dvwa:
    image: vulnerables/web-dvwa:latest
    container_name: dvwa-webapp
    hostname: dvwa
    networks:
      lab_network:
        ipv4_address: 192.168.100.40
    ports:
      - "8080:80"
    environment:
      - MYSQL_ROOT_PASSWORD=vulnerable
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=dvwa
    restart: unless-stopped

  # ============================================
  # Wireshark/tcpdump - Analyse réseau
  # ============================================
  network-analyzer:
    image: linuxserver/wireshark:latest
    container_name: wireshark-analyzer
    hostname: analyzer
    networks:
      lab_network:
        ipv4_address: 192.168.100.50
    cap_add:
      - NET_ADMIN
    ports:
      - "3000:3000"
    volumes:
      - ./pcaps:/pcaps
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    restart: unless-stopped

  # ============================================
  # Splunk - SIEM pour analyse des logs (optionnel)
  # ============================================
  splunk:
    image: splunk/splunk:latest
    container_name: splunk-siem
    hostname: splunk
    networks:
      lab_network:
        ipv4_address: 192.168.100.60
    ports:
      - "8000:8000"   # Web UI
      - "8088:8088"   # HEC
      - "9997:9997"   # Forwarder
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=ChangeMeNow!
    volumes:
      - splunk_data:/opt/splunk/var
    restart: unless-stopped
    profiles:
      - advanced

  # ============================================
  # Suricata - IDS/IPS (optionnel)
  # ============================================
  suricata:
    image: jasonish/suricata:latest
    container_name: suricata-ids
    hostname: suricata
    networks:
      lab_network:
        ipv4_address: 192.168.100.70
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    volumes:
      - suricata_logs:/var/log/suricata
      - ./pcaps:/pcaps:ro
    command: -i eth0
    restart: unless-stopped
    profiles:
      - advanced

networks:
  lab_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
          gateway: 192.168.100.1

volumes:
  kali_data:
    driver: local
  ubuntu_data:
    driver: local
  splunk_data:
    driver: local
  suricata_logs:
    driver: local

# ============================================
# UTILISATION
# ============================================
#
# Démarrer le lab complet :
#   docker-compose up -d
#
# Démarrer avec composants avancés :
#   docker-compose --profile advanced up -d
#
# Se connecter à Kali :
#   docker exec -it kali-attacker bash
#
# Se connecter à Ubuntu :
#   docker exec -it ubuntu-target bash
#
# Voir les logs :
#   docker-compose logs -f
#
# Arrêter le lab :
#   docker-compose down
#
# Supprimer tout (ATTENTION: perte de données) :
#   docker-compose down -v
#
# ============================================
# ACCÈS WEB
# ============================================
#
# DVWA Web App:     http://localhost:8080
# Wireshark UI:     http://localhost:3000
# Splunk SIEM:      http://localhost:8000 (admin/ChangeMeNow!)
#
# ============================================
# SÉCURITÉ
# ============================================
#
# ⚠️ CE LAB EST VOLONTAIREMENT VULNÉRABLE
# - NE JAMAIS exposer ces services à Internet
# - Utiliser UNIQUEMENT dans un réseau isolé
# - Toujours utiliser un firewall host
# - Arrêter les services après utilisation
#
